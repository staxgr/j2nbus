buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.9.+'
    }
}
apply plugin: 'android'

repositories {
        mavenCentral()
}

configurations {
    annotationproccess
}

dependencies {
    compile project(':j2nbus')
    compile fileTree(dir: 'libs', include: 'native-libs.jar')
    annotationproccess project(':j2nbus')
}

afterEvaluate { project ->
    android.applicationVariants.all { variant ->

        variant.javaCompile.options.compilerArgs += [
                '-classpath', configurations.compile.asPath,
                '-processorpath', configurations.annotationproccess.asPath,
                '-processor', 'se.tap2.j2nbus.J2NAnnotationProcessor',
                "-AoutDir=${projectDir}/jni/j2nbus-gen"
        ]

    }
}

repositories {
    mavenCentral()
}

// This is how we can add so files to project using gradle as a workaround awaiting official support
task nativeLibsToJar(
        type: Zip,
        description: 'create a jar archive of the native libs') {
    destinationDir file("libs")
    baseName 'native-libs'
    extension 'jar'
    from fileTree(dir: 'libs', include: '**/*.so')
    into 'lib/'

}
tasks.withType(Compile) {
    compileTask -> compileTask.dependsOn(nativeLibsToJar)
}

android {
    compileSdkVersion 18
    buildToolsVersion "19.0.3"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 16
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:19.+'
    //compile fileTree(dir: 'libs', include: ['*.jar'])
}
